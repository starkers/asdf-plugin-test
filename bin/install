#!/usr/bin/env bash

set -e
set -o pipefail

APP=ggg
GH_REPO="starkers/${APP}"

do_install() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local platform="$(uname | tr '[:upper:]' '[:lower:]')-$(get_arch)"
  local bin_install_path="$install_path/bin"
  local binary_path="$bin_install_path/${APP}"
  local download_url=$(get_download_url $version $platform)

  if [ "$TMPDIR" = "" ]; then
    local tmp_download_dir=$(mktemp -d -t ${APP}.XXX)
  else
    local tmp_download_dir=$TMPDIR
  fi

  mkdir -p "${bin_install_path}"

  local download_path="$tmp_download_dir/$(get_filename $platform)"

  echo "Downloading ${APP} from ${download_url} to ${binary_path}"
  if curl -Lfs "${download_url}" -o "${binary_path}"; then
    chmod +x "${binary_path}"
  else
    echo "Error: ${APP} ${version} not found. Run \'asdf list-all ${APP}\' for available versions." >&2
    exit 1
  fi
}

get_arch() {
  ARCH=$(uname -m)
  case $ARCH in
    x86_64) ARCH="amd64";;
    arm64|aarch64) ARCH="arm64";;
  esac
  echo "$ARCH"
}

get_filename() {
  local platform="${1}"
  local version="${2}"

  echo "${APP}-${version}-${platform}"
}

get_download_url() {
  local version="$1"
  local platform="$2"
  local filename="$(get_filename ${platform} ${version})"

  echo "https://github.com/${GH_REPO}/releases/download/${version}/${filename}"
}

do_install $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
